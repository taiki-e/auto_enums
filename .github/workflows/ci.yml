name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
      - v[0-9]+.[0-9]+
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  check-external-types:
    uses: taiki-e/github-actions/.github/workflows/check-external-types.yml@main
  deny:
    uses: taiki-e/github-actions/.github/workflows/deny.yml@main
  docs:
    uses: taiki-e/github-actions/.github/workflows/docs.yml@main
  miri:
    uses: taiki-e/github-actions/.github/workflows/miri.yml@main
  msrv:
    uses: taiki-e/github-actions/.github/workflows/msrv.yml@main
    with:
      event_name: ${{ github.event_name }}
  tidy:
    uses: taiki-e/github-actions/.github/workflows/tidy.yml@main

  test:
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - name: Install Rust
        run: rustup toolchain add ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      - run: rustup toolchain add nightly --no-self-update
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - run: cargo test --workspace --tests
      - run: cargo test --workspace --all-features
        if: startsWith(matrix.rust, 'nightly')
      - run: cargo minimal-versions build --workspace --no-private --detach-path-deps=skip-exact --all-features
      - run: cargo minimal-versions build --workspace --no-private --detach-path-deps=skip-exact --all-features --direct

  features:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - name: Install Rust
        run: rustup toolchain add nightly --no-self-update && rustup default nightly
      - uses: taiki-e/install-action@cargo-hack
      - run: cargo hack build --workspace --no-private --feature-powerset --depth 2 --no-dev-deps --features unstable --ignore-unknown-features
