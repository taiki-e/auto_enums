[package]
name = "auto_enums"
version = "0.8.3"
edition = "2021"
rust-version = "1.56"
license = "Apache-2.0 OR MIT"
repository = "https://github.com/taiki-e/auto_enums"
keywords = ["enum", "macros", "derive", "attribute"]
categories = ["no-std", "no-std::no-alloc", "rust-patterns"]
exclude = ["/.*", "/tools", "/DEVELOPMENT.md"]
description = """
A library for to allow multiple return types by automatically generated enum.
"""

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]

[lib]
proc-macro = true

[features]
# Default features.
default = ["std"]

# Analyze return type of function and `let` binding.
type_analysis = []

# Enable to use `transpose*` methods.
transpose_methods = []

# ==============================================================================
# [std|core] libraries

# Enable to use `std` library's traits.
std = []
# Enable to use `[std|core]::ops`'s `Deref`, `DerefMut`, `Index`, `IndexMut`, and `RangeBounds` traits.
ops = []
# Enable to use `[std|core]::convert`'s `AsRef` and `AsMut` traits.
convert = []
# Enable to use `[std|core]::fmt`'s traits other than `Debug`, `Display` and `Write`
fmt = []

# ==============================================================================
# Using external libraries

# https://docs.rs/futures/0.3
futures03 = []
# https://docs.rs/futures/0.1
futures01 = []
# https://docs.rs/rayon/1
rayon = []
# https://docs.rs/serde/1
serde = []
# https://docs.rs/tokio/1
tokio1 = []
# https://docs.rs/tokio/0.3
tokio03 = []
# https://docs.rs/tokio/0.2
tokio02 = []
# https://docs.rs/tokio/0.1
tokio01 = []
# https://docs.rs/http-body/1
http_body1 = []

# ==============================================================================
# Unstable features
# These features are outside of the normal semver guarantees and require the
# `unstable` feature as an explicit opt-in to unstable API.
unstable = []

# Enable unstable features of [std|core] libraries

# Enable to use `[std|core]::ops::Coroutine` trait.
coroutine_trait = []
generator_trait = ["coroutine_trait"] # alias for coroutine_trait; TODO: remove in the next breaking release
# Enable to use `[std|core]::ops`'s `Fn`, `FnMut`, and `FnOnce` traits.
fn_traits = []
# Enable to use `[std|core]::iter::TrustedLen` trait.
trusted_len = []

# Note: futures, tokio, serde, and rayon are public dependencies.
[dependencies]
derive_utils = { version = "0.13" }
proc-macro2 = "1.0.60"
quote = "1.0.25"
syn = { version = "2.0.6", features = ["full", "visit-mut"] }

[dev-dependencies]
macrotest = { git = "https://github.com/taiki-e/macrotest.git", branch = "dev" } # 2021 edition support + syn 2.0 + no cargo-expand + adjust overwrite behavior
rustversion = "1"
trybuild = { git = "https://github.com/taiki-e/trybuild.git", branch = "dev" } # adjust overwrite behavior

# for `#[enum_derive]`
futures03_crate = { package = "futures", version = "0.3", default-features = false, features = ["std"] }
futures01_crate = { package = "futures", version = "0.1" }
tokio1_crate = { package = "tokio", version = "1", default-features = false }
tokio03_crate = { package = "tokio", version = "0.3", default-features = false }
tokio02_crate = { package = "tokio", version = "0.2", default-features = false }
tokio01_crate = { package = "tokio", version = "0.1", default-features = false, features = ["io"] }
rayon_crate = { package = "rayon", version = "1" }
serde_crate = { package = "serde", version = "1" }
http_body1_crate = { package = "http-body", version = "1", default-features = false }

[lints]
workspace = true

[workspace]
resolver = "2"
members = ["bench"]

# This table is shared by projects under https://github.com/taiki-e.
# It is not intended for manual editing.
[workspace.lints.rust]
improper_ctypes = "warn"
improper_ctypes_definitions = "warn"
missing_debug_implementations = "warn"
non_ascii_idents = "warn"
rust_2018_idioms = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
# unsafe_op_in_unsafe_fn = "warn" # Set at crate-level instead since https://github.com/rust-lang/rust/pull/100081 is not available on MSRV
[workspace.lints.clippy]
all = "warn" # Downgrade deny-by-default lints
pedantic = "warn"
as_ptr_cast_mut = "warn"
default_union_representation = "warn"
inline_asm_x86_att_syntax = "warn"
trailing_empty_array = "warn"
transmute_undefined_repr = "warn"
undocumented_unsafe_blocks = "warn"
# Suppress buggy or noisy clippy lints
bool_assert_comparison = { level = "allow", priority = 1 }
borrow_as_ptr = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/8286
doc_markdown = { level = "allow", priority = 1 }
float_cmp = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/7725
manual_assert = { level = "allow", priority = 1 }
manual_range_contains = { level = "allow", priority = 1 } # https://github.com/rust-lang/rust-clippy/issues/6455#issuecomment-1225966395
missing_errors_doc = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
single_match = { level = "allow", priority = 1 }
single_match_else = { level = "allow", priority = 1 }
struct_excessive_bools = { level = "allow", priority = 1 }
struct_field_names = { level = "allow", priority = 1 }
too_many_arguments = { level = "allow", priority = 1 }
too_many_lines = { level = "allow", priority = 1 }
type_complexity = { level = "allow", priority = 1 }
